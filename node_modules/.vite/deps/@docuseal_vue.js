import {
  defineComponent,
  h
} from "./chunk-PD2AWGJV.js";
import "./chunk-UV5CTPV7.js";

// node_modules/@docuseal/vue/dist/index.esm.js
var d = defineComponent({ name: "DocusealForm", props: { src: { type: String, required: false, default: "" }, host: { type: String, required: false, default: "cdn.docuseal.com" }, role: { type: String, required: false, default: "" }, logo: { type: String, required: false, default: "" }, language: { type: String, required: false, default: "" }, submitter: { type: String, required: false, default: "" }, expand: { type: Boolean, required: false, default: true }, orderAsOnPage: { type: Boolean, required: false, default: false }, minimize: { type: Boolean, required: false, default: false }, preview: { type: Boolean, required: false, default: false }, email: { type: String, required: false, default: "" }, name: { type: String, required: false, default: "" }, backgroundColor: { type: String, required: false, default: "" }, applicationKey: { type: String, required: false, default: "" }, externalId: { type: String, required: false, default: "" }, completedRedirectUrl: { type: String, required: false, default: "" }, withTitle: { type: Boolean, required: false, default: true }, withDecline: { type: Boolean, required: false, default: false }, withFieldNames: { type: Boolean, required: false, default: true }, withFieldPlaceholder: { type: Boolean, required: false, default: false }, withSendCopyButton: { type: Boolean, required: false, default: true }, sendCopyEmail: { type: Boolean, required: false, default: null }, withDownloadButton: { type: Boolean, required: false, default: true }, allowToResubmit: { type: Boolean, required: false, default: true }, allowTypedSignature: { type: Boolean, required: false, default: true }, signature: { type: String, required: false, default: "" }, rememberSignature: { type: Boolean, required: false, default: false }, reuseSignature: { type: Boolean, required: false, default: true }, completedButton: { type: Object, required: false, default: () => ({}) }, goToLast: { type: Boolean, required: false, default: true }, skipFields: { type: Boolean, required: false, default: false }, autoscrollFields: { type: Boolean, required: false, default: true }, values: { type: Object, required: false, default: () => ({}) }, i18n: { type: Object, required: false, default: () => ({}) }, metadata: { type: Object, required: false, default: () => ({}) }, fields: { type: Array, required: false, default: () => [] }, readonlyFields: { type: Array, required: false, default: () => [] }, customCss: { type: String, required: false, default: "" } }, emits: ["complete", "init", "load", "decline"], mounted() {
  let t = "docuseal-form-script";
  if (!document.getElementById(t)) {
    let e = document.createElement("script");
    e.id = t, e.async = true, e.src = `https://${this.host}/js/form.js`, document.head.appendChild(e);
  }
  this.$el.addEventListener("completed", (e) => {
    this.$emit("complete", e.detail);
  }), this.$el.addEventListener("declined", (e) => {
    this.$emit("decline", e.detail);
  }), this.$el.addEventListener("load", (e) => {
    this.$emit("load", e.detail);
  }), this.$el.addEventListener("init", () => {
    this.$emit("init");
  });
}, render() {
  return h("docuseal-form", { "data-src": this.src, "data-email": this.email, "data-name": this.name, "data-role": this.role || this.submitter, "data-expand": this.expand, "data-order-as-on-page": this.orderAsOnPage, "data-minimize": this.minimize, "data-preview": this.preview, "data-go-to-last": this.goToLast, "data-with-title": this.withTitle, "data-with-decline": this.withDecline, "data-logo": this.logo, "data-language": this.language, "data-with-field-names": this.withFieldNames, "data-with-field-placeholder": this.withFieldPlaceholder, "data-external-id": this.externalId || this.applicationKey, "data-completed-redirect-url": this.completedRedirectUrl, "data-with-download-button": this.withDownloadButton, "data-allow-to-resubmit": this.allowToResubmit, "data-allow-typed-signature": this.allowTypedSignature, "data-signature": this.signature, "data-remember-signature": this.rememberSignature, "data-reuse-signature": this.reuseSignature, "data-with-send-copy-button": this.withSendCopyButton, "data-send-copy-email": this.sendCopyEmail, "data-skip-fields": this.skipFields, "data-autoscroll-fields": this.autoscrollFields, "data-values": JSON.stringify(this.values), "data-i18n": JSON.stringify(this.i18n), "data-metadata": JSON.stringify(this.metadata), "data-fields": JSON.stringify(this.fields), "data-readonly-fields": this.readonlyFields.join(","), "data-completed-button-title": this.completedButton.title, "data-completed-button-url": this.completedButton.url, "data-background-color": this.backgroundColor, "data-custom-css": this.customCss });
} });
var r = defineComponent({ name: "DocusealBuilder", props: { token: { type: String, required: true }, host: { type: String, required: false, default: "cdn.docuseal.com" }, language: { type: String, required: false, default: "en" }, preview: { type: Boolean, required: false, default: false }, previewMode: { type: Boolean, required: false, default: false }, inputMode: { type: Boolean, required: false, default: false }, autosave: { type: Boolean, required: false, default: true }, fields: { type: Array, required: false, default: () => [] }, submitters: { type: Array, required: false, default: () => [] }, requiredFields: { type: Array, required: false, default: () => [] }, i18n: { type: Object, required: false, default: () => ({}) }, roles: { type: Array, required: false, default: () => [] }, fieldTypes: { type: Array, required: false, default: () => [] }, drawFieldType: { type: String, required: false, default: "text" }, withRecipientsButton: { type: Boolean, required: false, default: true }, withTitle: { type: Boolean, required: false, default: true }, sendCopyEmail: { type: Boolean, required: false, default: null }, withSendButton: { type: Boolean, required: false, default: true }, onlyDefinedFields: { type: Boolean, required: false, default: false }, withUploadButton: { type: Boolean, required: false, default: true }, withAddPageButton: { type: Boolean, required: false, default: false }, withSignYourselfButton: { type: Boolean, required: false, default: true }, withDocumentsList: { type: Boolean, required: false, default: true }, withFieldsList: { type: Boolean, required: false, default: true }, withFieldPlaceholder: { type: Boolean, required: false, default: false }, customButton: { type: Object, required: false, default: () => ({ title: "", url: "" }) }, emailMessage: { type: Object, required: false, default: () => ({ subject: "", body: "" }) }, sendButtonText: { type: String, required: false, default: "" }, saveButtonText: { type: String, required: false, default: "" }, backgroundColor: { type: String, required: false, default: "" }, customCss: { type: String, required: false, default: "" } }, emits: ["load", "upload", "send", "init", "change", "save"], mounted() {
  let t = "docuseal-builder-script";
  if (!document.getElementById(t)) {
    let e = document.createElement("script");
    e.id = t, e.async = true, e.src = `https://${this.host}/js/builder.js`, document.head.appendChild(e);
  }
  this.$el.addEventListener("load", (e) => this.$emit("load", e.detail)), this.$el.addEventListener("upload", (e) => this.$emit("upload", e.detail)), this.$el.addEventListener("send", (e) => this.$emit("send", e.detail)), this.$el.addEventListener("save", (e) => this.$emit("save", e.detail)), this.$el.addEventListener("change", (e) => this.$emit("change", e.detail)), this.$el.addEventListener("init", () => this.$emit("init"));
}, render() {
  return h("docuseal-builder", { "data-token": this.token, "data-preview": this.preview || this.previewMode, "data-input-mode": this.inputMode, "data-language": this.language, "data-autosave": this.autosave, "data-send-button-text": this.sendButtonText, "data-save-button-text": this.saveButtonText, "data-send-copy-email": this.sendCopyEmail, "data-roles": this.roles.join(","), "data-field-types": this.fieldTypes.join(","), "data-draw-field-type": this.drawFieldType, "data-fields": JSON.stringify(this.fields), "data-submitters": JSON.stringify(this.submitters), "data-required-fields": JSON.stringify(this.requiredFields), "data-background-color": this.backgroundColor, "data-custom-button-title": this.customButton.title, "data-custom-button-url": this.customButton.url, "data-email-subject": this.emailMessage.subject, "data-email-body": this.emailMessage.body, "data-with-recipients-button": this.withRecipientsButton, "data-with-send-button": this.withSendButton, "data-with-title": this.withTitle, "data-with-i18n": this.i18n, "data-only-defined-fields": this.onlyDefinedFields, "data-with-upload-button": this.withUploadButton, "data-with-add-page-button": this.withAddPageButton, "data-with-documents-list": this.withDocumentsList, "data-with-fields-list": this.withFieldsList, "data-with-field-placeholder": this.withFieldPlaceholder, "data-with-sign-yourself-button": this.withSignYourselfButton, "data-custom-css": this.customCss });
} });
export {
  r as DocusealBuilder,
  d as DocusealForm
};
//# sourceMappingURL=@docuseal_vue.js.map
